service: import-service

frameworkVersion: 3

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  s3:
    bucketOne:
      name: ${self:custom.bucket}
      corsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - DELETE
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
plugins:
  - serverless-webpack
  - serverless-openapi-documenter

package:
  individually: true

functions:
  importProductsFile:
    handler: functions/importProductsFile/importProductsFile.handler
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          documentation:
            summary: Get preSigned URL to import CSV File
            description: Creates bucket and return preSigned Url to import file in the bucket
            requestModels:
              application/json: PutDocumentRequest
            queryParams:
              - name: name
                description: name of file to import in the bucket
                schema:
                  type: string
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: PreSigned URL
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a preSigned URL
                responseModels:
                  application/json: ErrorResponse
  importFileParser:
    handler: functions/importFileParser/importFileParser.handler
    events:
      - s3: bucketOne
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
          - suffix: .csv
        documentation:
          summary: Parse CSV file
          description: Parse CSV file loaded in the bucket
          requestModels:
            application/json: PutDocumentRequest
          methodResponses:
            - statusCode: 200
              responseBody:
                description:
              responseModels:
                application/json: PutDocumentResponse
            - statusCode: 500
              responseBody:
                description: An error message while parsing CSV
              responseModels:
                application/json: ErrorResponse
custom:
  bucket: task-5-csv-uploaded
  documentation:
    servers:
      url: https://yz57evquwe.execute-api.eu-central-1.amazonaws.com/dev
      description: The EPAM AWS backend - Import Service
    models:
      - name: ErrorResponse
        description: This is an error
        contentType: application/json
        schema: ${file(models/ErrorResponse.json)}

      - name: PutDocumentResponse
        description: PUT Document response model (external reference example)
        contentType: application/json
        schema: ${file(models/PutDocumentResponse.json)}

      - name: PutDocumentRequest
        description: PUT Document request model (inline example)
        contentType: application/json
        schema:
          $schema: http://json-schema.org/draft-04/schema#
          properties:
            SomeObject:
              type: object
              properties:
                SomeAttribute:
                  type: string
