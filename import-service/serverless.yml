service: import-service

frameworkVersion: 3
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  s3:
    bucketOne:
      name: ${env:BUCKET}
      corsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
              - DELETE
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    BUCKET: ${env:BUCKET}
    SQS_URL: !ImportValue SQSQueueLink
    SQS_ARN: !ImportValue SQSQueueArn
iam:
  role:
    statements:
      - Effect: Allow
        Action: s3:ListBucket
        Resource:
          - arn:aws:s3:::${env:BUCKET}
      - Effect: Allow
        Action:
          - s3:*
        Resource:
          - arn:aws:s3:::${env:BUCKET}/*
      - Effect: Allow
        Action: sqs:*
        Resource:
          - !ImportValue SQSQueueArn
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-openapi-documenter

package:
  individually: true

functions:
  importProductsFile:
    handler: functions/importProductsFile/importProductsFile.handler
    events:
      - http:
          path: /import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            type: TOKEN
            arn: !ImportValue BasicAuthorizerArn
            identitySource: method.request.header.Authorization
          request:
            parameters:
              querystrings:
                name: true
          documentation:
            summary: Get preSigned URL to import CSV File
            description: Creates bucket and return preSigned Url to import file in the bucket
            requestModels:
              application/json: PutDocumentRequest
            queryParams:
              - name: name
                description: name of file to import in the bucket
                schema:
                  type: string
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: PreSigned URL
                responseModels:
                  application/json: PutDocumentResponse
              - statusCode: 500
                responseBody:
                  description: An error message when creating a preSigned URL
                responseModels:
                  application/json: ErrorResponse
  importFileParser:
    handler: functions/importFileParser/importFileParser.handler
    events:
      - s3:
          bucket: bucketOne
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
custom:
  documentation:
    servers:
      url: https://yz57evquwe.execute-api.eu-central-1.amazonaws.com/dev
      description: The EPAM AWS backend - Import Service
    models:
      - name: ErrorResponse
        description: This is an error
        contentType: application/json
        schema: ${file(models/ErrorResponse.json)}

      - name: PutDocumentResponse
        description: PUT Document response model (external reference example)
        contentType: application/json
        schema: ${file(models/PutDocumentResponse.json)}

      - name: PutDocumentRequest
        description: PUT Document request model (inline example)
        contentType: application/json
        schema:
          $schema: http://json-schema.org/draft-04/schema#
          properties:
            SomeObject:
              type: object
              properties:
                SomeAttribute:
                  type: string
  dotenv:
    required:
      file: true
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules: true
resources:
  Resources:
    RestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: aws-shop
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId: !Ref RestApi

    GatewayResponseUnauthorized:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId: !Ref RestApi

    GatewayResponseDefault5XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId: !Ref RestApi
